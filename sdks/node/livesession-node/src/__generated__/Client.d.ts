/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "./environments";
import * as core from "./core";
import { Sessions } from "./api/resources/sessions/client/Client";
import { Alerts } from "./api/resources/alerts/client/Client";
import { Webhooks } from "./api/resources/webhooks/client/Client";
import { Websites } from "./api/resources/websites/client/Client";
export declare namespace ApiClient {
    interface Options {
        environment?: core.Supplier<environments.ApiEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        apiKey: core.Supplier<string>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class ApiClient {
    protected readonly _options: ApiClient.Options;
    protected _sessions: Sessions | undefined;
    protected _alerts: Alerts | undefined;
    protected _webhooks: Webhooks | undefined;
    protected _websites: Websites | undefined;
    constructor(_options: ApiClient.Options);
    get sessions(): Sessions;
    get alerts(): Alerts;
    get webhooks(): Webhooks;
    get websites(): Websites;
}
